({  
    doInit : function(component, event, helper) {  
        var action = component.get("c.getCase");  
        action.setParams({
            "recordId" : component.get("v.recordId")
        });
        action.setCallback(this,function(response){
            var state = response.getState(); 
            if(state == 'SUCCESS'){ 
                var result = response.getReturnValue(); 
                var datetime = result.Date_Time__c;
                component.set("v.isValid",true);
                var milestonetime = new Date(datetime); 
                
                if(datetime == null){ 
                    component.set("v.hour",0);
                    component.set("v.minute",0);
                    component.set("v.second",0); 
                }else if(datetime != null){ 
                    var timer = setInterval(function() {
                        var today = new Date().getTime();  
                        var distance = milestonetime - today;   
                        var hours = Math.floor((distance % (1000 * 60 * 60 * 60)) / (1000 * 60 * 60)); 
                        var minutes =Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                        var seconds = Math.floor((distance % (1000 * 60)) / 1000);
                        
                        component.set("v.hour",hours);
                        component.set("v.day",Math.floor(hours/24));
                        component.set("v.minute",minutes);
                        component.set("v.second",seconds);
                        var toastEvent = $A.get("e.force:showToast");
                        if(hours == 0 && minutes == 30 && seconds == 59 && result.Violation__c== false){
                            helper.UpdateCaseHelper(component, event, 'Violation');
                            component.set("v.Infomation", "Your case is violated");
                            toastEvent.setParams({
                                title : 'Warning',
                                message: 'Your Case is Violated',
                                duration:' 5000',
                                key: 'info_alt',
                                type: 'warning',
                                mode: 'pester'
                            });
                            toastEvent.fire();
                        }  
                        if(hours == 0 && minutes == 0 && seconds == 0 && result.Escalation__c== false){
                            helper.UpdateCaseHelper(component, event, 'Escalation');
                            component.set("v.Infomation", "Case is Escalated");
                            toastEvent.setParams({
                                title : 'Warning',
                                message: 'You Case is Escalated',
                                duration:' 5000',
                                key: 'info_alt',
                                type: 'warning',
                                mode: 'pester'
                            });
                            toastEvent.fire();
                        }
                        
                    }, 1000);                     
                }
                
            }
        });
        $A.enqueueAction(action);
    },
    
    
})